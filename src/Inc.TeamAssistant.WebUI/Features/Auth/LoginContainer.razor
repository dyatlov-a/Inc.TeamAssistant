@page "/login"
@page "/ru/login"
@page "/en/login"

@inject IUserService UserService
@inject IRenderContext RenderContext
@inject RequestProcessor RequestProcessor
@inject NavRouter NavRouter

<MetaDataModule />

<div class="login-container">
    <Login
        State="_state"
        AuthBotContext="_authBotContext"
        Retry="Load"
        LoggedInAsSystemUser="LoginAsSystemUser"
        Lang="@RenderContext.CurrentLanguage.Value"
        ReturnUrl="@ReturnUrl" />
</div>

@code {
    [Parameter, SupplyParameterFromQuery]
    public string? ReturnUrl { get; set; }
    
    private readonly LoadingState _state = LoadingState.Done();
    private AuthBotContext _authBotContext = AuthBotContext.Empty;

    protected override async Task OnParametersSetAsync() => await Load();

    private async Task Load()
    {
        _authBotContext = await RequestProcessor.Process(
            () => UserService.GetAuthBotContext(),
            nameof(LoginContainer),
            _state);
    }
    
    private async Task LoginAsSystemUser(long personId)
    {
        await NavRouter.MoveToRoute(
            $"/accounts/login-as-system-user/{personId}?returnUrl={ReturnUrl}",
            RoutingType.Server);
    }
}