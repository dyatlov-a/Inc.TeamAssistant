@page "/login"
@page "/ru/login"
@page "/en/login"

@inject IUserService UserService
@inject IRenderContext RenderContext
@inject RequestProcessor RequestProcessor
@inject NavRouter NavRouter

<MetaDataModule />

<div class="login-container">
    <Login
        State="_state"
        ReturnUrl="@ReturnUrl"
        BotUserName="@_botUserName"
        HasSuperUser="RenderContext.IsDevelopment()"
        Retry="Load"
        LoginAsSuperUser="LoginAsSuperUser" />
</div>

@code {
    [Parameter, SupplyParameterFromQuery]
    public string? ReturnUrl { get; set; }
    
    private readonly LoadingState _state = LoadingState.Done();
    private string _botUserName = string.Empty;

    protected override async Task OnParametersSetAsync()
    {
        if (!RenderContext.IsDevelopment())
            await Load();
    }

    private async Task Load()
    {
        var result = await RequestProcessor.Process(
            () => UserService.GetAuthBotContext(),
            nameof(LoginContainer),
            _state);

        _botUserName = result.UserName;
        
        StateHasChanged();
    }
    
    private async Task LoginAsSuperUser()
    {
        await NavRouter.MoveToRoute(
            $"/accounts/login-as-super-user?returnUrl={ReturnUrl}",
            RoutingType.Server);
    }
}