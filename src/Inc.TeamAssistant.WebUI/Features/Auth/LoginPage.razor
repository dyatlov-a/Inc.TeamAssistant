@page "/login"
@page "/ru/login"
@page "/en/login"

@inject IUserService UserService
@inject IRenderContext RenderContext
@inject ResourcesManager Resources
@inject RequestProcessor RequestProcessor

<MetaDataModule WebsiteSection="WebsiteSection.Main" />

<div class="login">
    <div class="login-container">
        <div class="login-action">
            <div class="login-action-container">
                <h1 class="telegram-login__header">@Resources[Messages.Login_Title]</h1>
                <p class="telegram-login__text">@Resources[Messages.Login_TelegramText]</p>
                <div class="telegram-login__actions">
                    <Loading State="_state">
                        <Content>
                            @if (RenderContext.IsDevelopment())
                            {
                                <a
                                    href="/accounts/login-as-super-user?returnUrl=@ReturnUrl"
                                    class="button button_telegram">
                                    @Resources[Messages.Login_AsSuperuserText]
                                </a>
                            }
                            else if (!string.IsNullOrWhiteSpace(_botUserName))
                            {
                                <script
                                    async
                                    src="https://telegram.org/js/telegram-widget.js?22"
                                    data-telegram-login="@_botUserName"
                                    data-size="large"
                                    data-userpic="false"
                                    data-auth-url="accounts/login-tg?return_url=@ReturnUrl"
                                    data-request-access="write">
                                </script>
                            }
                        </Content>
                    </Loading>
                </div>
            </div>
        </div>
        <div class="login-motivation">
            <div class="login-motivation-container">
                <h2 class="login-motivation__header">@Resources[Messages.Login_CreateBot]</h2>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter, SupplyParameterFromQuery]
    public string? ReturnUrl { get; set; }
    
    private LoadingState _state = LoadingState.Done();
    private string _botUserName = string.Empty;

    protected override Task OnParametersSetAsync() => Load();
    
    private async Task Load()
    {
        _state = await RequestProcessor.Process(
            () => UserService.GetAuthBotContext(),
            nameof(LoginPage),
            r =>
            {
                _botUserName = r.UserName;
                _state = LoadingState.Done();
                StateHasChanged();
            });
    }
}