@inject IStringLocalizer<DashboardResources> Localizer

@if (TeamId.HasValue)
{
    <DashboardWidget
        HasControls="true"
        HasChart="true"
        Title="@Localizer["ReviewTotalStatsWidgetTitle"]">
        <DateSelector Date="Date" Items="DateItems" OnSelected="OnSelected" />
        <Loading State="State" Retry="Retry">
            <div class="component-container">
                @if (FormModel.Review.Any())
                {
                    <div class="review-total-stats">
                        <div class="review-total-stats__item">
                            <ApexChart
                                TItem="HistoryByTeamItemDto"
                                Title="@string.Format(
                                           Localizer["ReviewByReviewerTemplate"],
                                           FormModel.IntervalInDays)"
                                Options="ApexChartOptionsBuilder.Build<HistoryByTeamItemDto>()">
                                <ApexPointSeries TItem="HistoryByTeamItemDto"
                                                 Items="FormModel.Review"
                                                 SeriesType="SeriesType.Donut"
                                                 XValue="@(e => e.PersonName)"
                                                 YValue="@(e => e.Count)"
                                                 OrderByDescending="e => e.Y!"/>
                            </ApexChart>
                        </div>
                        <div class="review-total-stats__item">
                            <ApexChart
                                TItem="HistoryByTeamItemDto"
                                Title="@string.Format(
                                           Localizer["ReviewByOwnerTemplate"],
                                           FormModel.IntervalInDays)"
                                Options="ApexChartOptionsBuilder.Build<HistoryByTeamItemDto>()">
                                <ApexPointSeries TItem="HistoryByTeamItemDto"
                                                 Items="FormModel.Requests"
                                                 SeriesType="SeriesType.Donut"
                                                 XValue="@(e => e.PersonName)"
                                                 YValue="@(e => e.Count)"
                                                 OrderByDescending="e => e.Y!"/>
                            </ApexChart>
                        </div>
                    </div>
                }
                else
                {
                    <NoData ComponentStyle="ComponentStyle.Secondary"/>
                }
            </div>
        </Loading>
    </DashboardWidget>
}

@code {
    /// <summary>
    /// Selected team identifier.
    /// </summary>
    [Parameter, EditorRequired]
    public Guid? TeamId { get; set; }
    
    /// <summary>
    /// Selected date.
    /// </summary>
    [Parameter, EditorRequired]
    public DateOnly? Date { get; set; }
    
    /// <summary>
    /// Dates.
    /// </summary>
    [Parameter, EditorRequired]
    public IReadOnlyDictionary<string, DateOnly> DateItems { get; set; } = default!;

    /// <summary>
    /// Component state.
    /// </summary>
    [Parameter, EditorRequired]
    public LoadingState State { get; set; } = default!;
    
    /// <summary>
    /// Form model.
    /// </summary>
    [Parameter, EditorRequired]
    public ReviewTotalStatsWidgetFormModel FormModel { get; set; } = default!;
    
    /// <summary>
    /// Action for retry.
    /// </summary>
    [Parameter, EditorRequired]
    public Func<Task> Retry { get; set; } = default!;
    
    /// <summary>
    /// On selected event
    /// </summary>
    [Parameter, EditorRequired]
    public EventCallback<DateOnly> OnSelected { get; set; }
}