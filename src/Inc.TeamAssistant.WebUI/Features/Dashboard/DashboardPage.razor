@page "/dashboard"
@page "/ru/dashboard"
@page "/en/dashboard"
@page "/dashboard/{BotId:guid}"
@page "/ru/dashboard/{BotId:guid}"
@page "/en/dashboard/{BotId:guid}"
@page "/dashboard/{BotId:guid}/{TeamId:guid}"
@page "/ru/dashboard/{BotId:guid}/{TeamId:guid}"
@page "/en/dashboard/{BotId:guid}/{TeamId:guid}"

@attribute [Authorize]

@inherits PersistentComponent<DashboardPageViewModel>

<PageTitle>@ViewModel.Title</PageTitle>

<DashboardNavbar />

<div class="dashboard">
    <div class="dashboard-toolbar">
        <AuthorizeView>
            <Authorized>
                <div class="dashboard-toolbar__content">
                    <DashboardTeamSelector UserId="context.User.ToPerson().Id" BotId="BotId" TeamId="TeamId" />
                </div>
            </Authorized>
        </AuthorizeView>
    </div>
    <div class="dashboard-content">
        <div class="dashboard-widgets">
            <AuthorizeView>
                <Authorized>
                    @if (TeamId.HasValue)
                    {
                        <div class="dashboard-widgets__widget">
                            <div class="dashboard-widgets__content">
                                <TeammatesWidget TeamId="TeamId.Value"/>
                            </div>
                        </div>
                        <div class="dashboard-widgets__widget">
                            <div class="dashboard-widgets__content">
                                <ReviewTotalStatsWidget TeamId="TeamId.Value" Depth="_statsDepth" />
                            </div>
                        </div>
                        <div class="dashboard-widgets__widget">
                            <div class="dashboard-widgets__content">
                                <LastTasksWidget TeamId="TeamId.Value" Count="10" />
                            </div>
                        </div>
                        <div class="dashboard-widgets__widget">
                            <div class="dashboard-widgets__content">
                                <ReviewAverageStatsWidget TeamId="TeamId.Value" Depth="_statsDepth" />
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="dashboard-widgets__widget">
                            <FormSection Title="Bot widgets" AsRows="true">
                                <HelpContent>
                                    @ViewModel.SelectTeam <a href="@MoveToCreateBot()" class="link link_white">@ViewModel.CreateBot</a>
                                </HelpContent>
                                <Content>
                                </Content>
                            </FormSection>
                        </div>
                    }
                </Authorized>
            </AuthorizeView>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public Guid? BotId { get; set; }
    
    [Parameter]
    public Guid? TeamId { get; set; }

    private readonly int _statsDepth = 90;

    protected override Task<DashboardPageViewModel> Initialize(Dictionary<string, string> resources)
    {
        return Task.FromResult(new DashboardPageViewModel(
            resources[Messages.Dashboard_Title],
            resources[Messages.Dashboard_SelectTeam],
            resources[Messages.Dashboard_CreateBot]));
    }

    private string MoveToCreateBot() => LinkBuilder("constructor");
}