@using Inc.TeamAssistant.Connector.Model.Queries.GetTeamConnector

@inject IBotService BotService
@inject ResourcesManager Resources
@inject RequestProcessor RequestProcessor

<div class="team-connector">
    <Loading State="_state">
        <Content>
            <FormSection
                Title="@_team.TeamName"
                HelpText="@Resources[Messages.Dashboard_ConnectToTeamHelp]"
                AsRows="true">
                <Content>
            
                    <div class="team-connector__code">
                        @((MarkupString)_team.Code)
                    </div>
                    <a href="@_team.LinkForConnect" class="button button_dark team-connector__link" target="_blank">
                        @Resources[Messages.Dashboard_ConnectToTeamButton]
                    </a>
                
                </Content>
            </FormSection>
        </Content>
    </Loading>
</div>

@code {
    [Parameter, EditorRequired]
    public Guid TeamId { get; set; }

    private RequestState _state = RequestState.Done();
    private GetTeamConnectorResult _team = new(string.Empty, string.Empty, string.Empty);
    
    protected override Task OnParametersSetAsync() => Load();
    
    private async Task Load()
    {
        _state = await RequestProcessor.Process(
            () => BotService.GetConnector(TeamId, "000", "9d9d9d"),
            nameof(DashboardTeamConnector),
            r =>
            {
                _team = r;
                _state = RequestState.Done();
                StateHasChanged();
            });
    }
}