@inherits InputBase<DateOnly>

<FormFieldSet
    FieldId="@FieldId"
    Label="@Label">
    <Content>
        <div class="time-selector__years">
            <SelectList
                FieldId="@FieldId"
                Value="_selectedYear"
                ValueChanged="@((int i) => SelectYear(i))"
                Items="_years"
                TitleSelector="i => i.Text"
                ValueSelector="i => i.Value"/>
        </div>
        <div class="time-selector__months">
            <SelectList
                FieldId="@($"{FieldId}-month")"
                Value="_selectedMonth"
                ValueChanged="@((int i) => SelectMonth(i))"
                Items="_months"
                TitleSelector="i => i.Text"
                ValueSelector="i => i.Value"/>
        </div>
        <div class="time-selector__days">
            <SelectList
                FieldId="@($"{FieldId}-day")"
                Value="_selectedDay"
                ValueChanged="@((int i) => SelectDay(i))"
                Items="Days"
                TitleSelector="i => i.Text"
                ValueSelector="i => i.Value"/>
        </div>
    </Content>
</FormFieldSet>

@code {
    [Parameter, EditorRequired]
    public string FieldId { get; set; } = default!;
    
    [Parameter, EditorRequired]
    public string Label { get; set; } = default!;
    
    private int _selectedYear;
    private int _selectedMonth;
    private int _selectedDay;
    
    private readonly IReadOnlyCollection<(string Text, int Value)> _years = Enumerable
        .Range(24, 10)
        .Select(i => (i.ToString("D2"), i + 2000))
        .ToArray();
    
    private readonly IReadOnlyCollection<(string Text, int Value)> _months = Enumerable
        .Range(1, 12)
        .Select(i => (i.ToString("D2"), i))
        .ToArray();
    
    private IReadOnlyCollection<(string Text, int Value)> Days => Enumerable
        .Range(1, DateTime.DaysInMonth(_selectedYear, _selectedMonth))
        .Select(i => (i.ToString("D2"), i))
        .ToArray();
    
    protected override void OnParametersSet()
    {
        _selectedYear = CurrentValue.Year;
        _selectedMonth = CurrentValue.Month;
        _selectedDay = CurrentValue.Day;
    }
    
    private void SelectYear(int year)
    {
        _selectedYear = year;
        SetCurrentValue();
    }
    
    private void SelectMonth(int month)
    {
        _selectedMonth = month;
        SetCurrentValue();
    }
    
    private void SelectDay(int day)
    {
        _selectedDay = day;
        SetCurrentValue();
    }
    
    private void SetCurrentValue() => CurrentValue = new DateOnly(_selectedYear, _selectedMonth, _selectedDay);
    
    protected override bool TryParseValueFromString(
        string? value,
        out DateOnly result,
        out string validationErrorMessage)
    {
        throw new NotImplementedException();
    }
}