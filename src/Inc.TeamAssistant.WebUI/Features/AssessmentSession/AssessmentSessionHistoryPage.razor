@page "/assessment-session/{teamId:guid}/{date}"
@page "/en/assessment-session/{teamId:guid}/{date}"
@page "/ru/assessment-session/{teamId:guid}/{date}"

@inherits PersistentComponent<AssessmentSessionHistoryPageViewModel>

@inject IAppraiserService AppraiserService

<div class="assessment-story-list">
    <div class="assessment-story-list__container">
        <h1 class="assessment-story-list__title">@ViewModel.StoryList @Date</h1>
        
        @if (ViewModel.Data is not null)
        {
            <div class="assessment-story-list__body">
                @foreach (var story in ViewModel.Data.Items)
                {
                    <Story Item="story" AverageRating="@ViewModel.AverageRating" />
                }
            </div>
            <a href="@MoveToBack()" class="assessment-story-back">@ViewModel.LinkToBackText</a>
        }
    </div>
</div>

@code {
    [Parameter, EditorRequired]
    public Guid TeamId { get; set; }

    [Parameter, EditorRequired]
    public string Date { get; set; } = default!;

    private string MoveToBack() => LinkBuilder($"assessment-session/{TeamId:N}");
    
    protected override async Task<AssessmentSessionHistoryPageViewModel> Initialize(
        Dictionary<string, string> resources)
    {
        var getStoriesResult = await AppraiserService.GetStories(TeamId, DateOnly.Parse(Date));
        
        return new AssessmentSessionHistoryPageViewModel(
            resources[Messages.GUI_Back],
            resources[Messages.GUI_StoryList],
            resources[Messages.GUI_AverageRating],
            getStoriesResult.Result);
    }
}