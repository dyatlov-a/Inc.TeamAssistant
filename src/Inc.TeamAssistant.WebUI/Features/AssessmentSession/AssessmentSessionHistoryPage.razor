@page "/assessment-history/{teamId:guid}/{date}"
@page "/en/assessment-history/{teamId:guid}/{date}"
@page "/ru/assessment-history/{teamId:guid}/{date}"

@inherits PersistentComponent<AssessmentSessionHistoryPageViewModel>

@inject IAppraiserService AppraiserService

<MetaDataModule WebsiteSection="WebsiteSection.Assessment" MetaOverrideTitle="@ViewModel.StoryList" />

<main class="main">
    <div class="assessment-history-header">
        <div class="assessment-history-header__container">
            <Breadcrumbs Items="ViewModel.Breadcrumbs" />
            <h1 class="title">@ViewModel.StoryList</h1>
        </div>
    </div>
        @foreach(var item in ViewModel.Items)
        {
            <div class="assessment-history-content">
                <div class="assessment-history-content__container">
                    <AssessmentIndividual Item="item" MeanRating="@ViewModel.MeanRating"/>
                </div>
            </div>
        }
</main>
<MainFooter />
        
@code {
    [Parameter, EditorRequired]
    public Guid TeamId { get; set; }

    [Parameter, EditorRequired]
    public string Date { get; set; } = default!;
    
    protected override async Task<AssessmentSessionHistoryPageViewModel> Initialize(
        Dictionary<string, string> resources)
    {
        var getStoriesResult = await AppraiserService.GetStories(TeamId, DateOnly.Parse(Date));
        
        return new AssessmentSessionHistoryPageViewModel(
            resources[Messages.GUI_StoryList],
            resources[Messages.GUI_MeanRating],
            new BreadcrumbItem[]
            {
                new (resources[Messages.GUI_AssessmentSession], LinkBuilder($"assessment-session/{TeamId:N}")),
                new (Date, LinkBuilder($"assessment-history/{TeamId:N}/{Date}"))
            },
            getStoriesResult.Result.Items);
    }
}