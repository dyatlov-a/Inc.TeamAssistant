@using Inc.TeamAssistant.Appraiser.Model.Queries.GetAssessmentHistory
@using Inc.TeamAssistant.Appraiser.Model.Common

@inherits PersistentComponent<AssessmentSessionHistoryViewModel>

@inject IAppraiserService Service

<div class="history">
    <div class="history__title">@ViewModel.Title</div>
    <div class="history__body">
        @if (ViewModel.Data is { State: ServiceResultState.Success, Result: not null })
        {
            foreach (var item in ViewModel.Data.Result.Items)
            {
                <a href="@MoveToItem(item)" class="history__item">
                    @item.AssessmentDate.ToString("dd-MM-yyyy") - @item.StoriesCount @ViewModel.TasksName
                </a>
            }
        }
    </div>
</div>

@code {
    [Parameter, EditorRequired]
    public Guid TeamId { get; set; }
    
    [Parameter, EditorRequired]
    public int HistoryDepth { get; set; }

    private string MoveToItem(AssessmentHistoryDto historyItem)
    {
        if (historyItem is null)
            throw new ArgumentNullException(nameof(historyItem));

        return LinkBuilder($"assessment-session/{TeamId:N}/{historyItem.AssessmentDate:yyyy-MM-dd}");
    }
    
    protected override async Task<AssessmentSessionHistoryViewModel> Initialize(Dictionary<string, string> resources)
    {
        return new AssessmentSessionHistoryViewModel(
            resources[Messages.GUI_History],
            resources[Messages.GUI_Tasks],
            await Service.GetAssessmentHistory(TeamId, HistoryDepth));
    }
}