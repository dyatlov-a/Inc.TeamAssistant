@using Inc.TeamAssistant.Primitives

@inherits PersistentComponent<RequestDemoViewModel>

<div class="request-demo__body">
    <div class="request-demo-text">
        <h1 class="request-demo-text__header">
            <span class="request-demo-text-item">@ViewModel.Header</span><br/><span class="request-demo-text-item">@ViewModel.SubHeader</span>
        </h1>
        <br/>
        <p class="request-demo-text__description">
            <span class="request-demo-text-item">üëå @ViewModel.ToolAppraiser<br/></span>
            <span class="request-demo-text-item">ü§ù @ViewModel.ToolReviewer<br/></span>
            <span class="request-demo-text-item">üí¨ @ViewModel.ToolRandomCoffee</span>
        </p>
        <div class="request-demo-actions">
            <a href="mailto:@(GlobalSettings.FeedbackTo)?body=@(ViewModel.RequestDemoBody)&subject=@(ViewModel.RequestDemoSubject)" class="button button_black">@ViewModel.RequestDemo</a>
            <br/>
            <a href="@MoveToConstructor()" class="link link_black request-demo-actions__link">@ViewModel.CreateBotLink</a>
        </div>
    </div>
</div>

@code {
    private string MoveToConstructor() => LinkBuilder("constructor");
    
    protected override Task<RequestDemoViewModel> Initialize(Dictionary<string, string> resources)
    {
        var requestDemo = resources[Messages.GUI_RequestDemo];

        return Task.FromResult(new RequestDemoViewModel(
            requestDemo,
            $"{requestDemo} [TeamAssistant]",
            resources[Messages.GUI_RequestDemoBody],
            resources[Messages.GUI_MainHeader],
            resources[Messages.GUI_MainSubHeader],
            resources[Messages.GUI_ToolAppraiser],
            resources[Messages.GUI_ToolReviewer],
            resources[Messages.GUI_ToolRandomCoffee],
            resources[Messages.GUI_CreateBotLink]));
    }
}