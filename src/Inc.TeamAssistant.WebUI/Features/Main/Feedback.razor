@using Inc.TeamAssistant.Primitives
@using Inc.TeamAssistant.WebUI.Services.Internal

@inject LanguageManager LanguageManager

<div class="feedback__body">
    <div class="feedback-text">
        <h1 class="feedback-text__header">
            <span class="text-item">@_header</span><br/><span class="text-item">@_subHeader</span>
        </h1>
        <br/>
        <p class="feedback-text__description">
            <span class="text-item">üëå @_toolAppraiser<br/></span>
            <span class="text-item">ü§ù @_toolReviewer<br/></span>
            <span class="text-item">üí¨ @_toolRandomCoffee</span>
        </p>
        <br/>
        <a href="mailto:@(UserSettings.FeedbackTo)?body=@(_requestDemoBody)&subject=@(_requestDemoSubject)" class="button button_black">@_requestDemo</a>
    </div>
</div>

@code {
    private string _requestDemo = string.Empty;
    private string _requestDemoSubject = string.Empty;
    private string _requestDemoBody = string.Empty;

    private string _getContacts = string.Empty;
    private string _header = string.Empty;
    private string _subHeader = string.Empty;
    private string _toolAppraiser = string.Empty;
    private string _toolReviewer = string.Empty;
    private string _toolRandomCoffee = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        var resources = await LanguageManager.GetResource();

        var requestDemo = resources[Messages.GUI_RequestDemo];
        _getContacts = resources[Messages.GUI_GetContacts];
        _requestDemo = requestDemo;
        _requestDemoSubject = $"{requestDemo} [TeamAssistant]";
        _requestDemoBody = resources[Messages.GUI_RequestDemoBody];
        _header = resources[Messages.GUI_MainHeader];
        _subHeader = resources[Messages.GUI_MainSubHeader];
        _toolAppraiser = resources[Messages.GUI_ToolAppraiser];
        _toolReviewer = resources[Messages.GUI_ToolReviewer];
        _toolRandomCoffee = resources[Messages.GUI_ToolRandomCoffee];
    }
}