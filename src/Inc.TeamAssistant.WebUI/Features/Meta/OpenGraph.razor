@inject IRenderContext RenderContext
@inject IStringLocalizer<MetaResources> Localizer

<meta property="og:locale" content="@LanguageId">
<meta property="og:title" content="@Localizer[Data.Title]">
<meta property="og:description" content="@Localizer[Data.Description]">
<meta property="og:type" content="website">
<meta property="og:url" content="https://@(GlobalResources.Settings.CanonicalName)">
<meta property="og:site_name" content="@GlobalResources.Settings.CanonicalName">
<meta property="og:image" content="@ImageUrl">
<meta property="og:image:width" content="1200">
<meta property="og:image:height" content="630">

<meta name="twitter:card" content="summary_large_image">
<meta name="twitter:site" content="@(GlobalResources.Settings.CanonicalName)">
<meta name="twitter:title" content="@Localizer[Data.Title]">
<meta name="twitter:description" content="@Localizer[Data.Description]">
<meta name="twitter:image" content="@ImageUrl">

<meta property="vk:image" content="@ImageUrl">

@code {
    [Parameter, EditorRequired]
    public WebsiteSection WebsiteSection { get; set; }

    private string LanguageId => $"{RenderContext.CurrentLanguage.Value.ToLowerInvariant()}_{RenderContext.CurrentLanguage.Value.ToUpperInvariant()}";
    
    private string ImageUrl => $"https://{GlobalResources.Settings.CanonicalName}/open-graph/create-card/{Data.Image}?text={Localizer[Data.ImageText]}";
    
    private (string Title, string Description, string Image, string ImageText) Data => WebsiteSection switch
    {
        WebsiteSection.Assessment => ("OgAppraiserTitle", "OgAppraiserDescription", "main.jpg", "OgAppraiserImageText"),
        WebsiteSection.Map => ("OgCheckInTitle", "OgCheckInDescription", "map.jpg", "OgCheckInImageText"),
        _ => ("OgMainTitle", "OgMainDescription", "main.jpg", "OgMainImageText")
    };
}