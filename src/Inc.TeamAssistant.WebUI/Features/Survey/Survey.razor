@inject IStringLocalizer<SurveyResources> Localizer

<DashboardGrid>
    <Toolbar>
        <RoomStatePanel
            HasPrevious="false"
            HasNext="IsFacilitator"
            HasFinish="false"
            HasRaiseHand="false"
            CanChangeProperties="IsFacilitator"
            CurrentUserId="CurrentUserId"
            FacilitatorGiven="FacilitatorGiven"
            RoomPropertiesOpened="RoomPropertiesOpened"
            MoveNext="MoveNext" />
        <RoomNavbarContainer RoomId="RoomId"/>
    </Toolbar>
    <Content>
        <Loading State="State" Retry="Retry">
            @if (Question is null)
            {
                @Localizer["WaitStartHealthCheck"]
            }
            else
            {
                <AnswerFrom
                    Title="@Question.Title"
                    Text="@Question.Text"
                    FormModel="@(new AnswerFromModel(Question))"
                    OnNextQuestion="OnNextQuestion"
                    OnValidSubmit="AnswerSelected" />
            }
        </Loading>
    </Content>
</DashboardGrid>

@code {
    /// <summary>
    /// Room identifier.
    /// </summary>
    [Parameter, EditorRequired]
    public Guid RoomId { get; set; }
    
    /// <summary>
    /// Current user id.
    /// </summary>
    [Parameter, EditorRequired]
    public long CurrentUserId { get; set; }
    
    /// <summary>
    /// Facilitator id.
    /// </summary>
    [Parameter, EditorRequired]
    public long? FacilitatorId { get; set; }
    
    /// <summary>
    /// Current question
    /// </summary>
    [Parameter, EditorRequired]
    public SurveyQuestionDto? Question { get; set; }
    
    /// <summary>
    /// Move to next action.
    /// </summary>
    [Parameter, EditorRequired]
    public EventCallback MoveNext { get; set; }
    
    /// <summary>
    /// Facilitator given action.
    /// </summary>
    [Parameter, EditorRequired]
    public EventCallback FacilitatorGiven { get; set; }
    
    /// <summary>
    /// Retro properties opened action.
    /// </summary>
    [Parameter, EditorRequired]
    public EventCallback RoomPropertiesOpened { get; set; }
    
    /// <summary>
    /// Component state.
    /// </summary>
    [Parameter, EditorRequired]
    public LoadingState State { get; set; } = default!;
    
    /// <summary>
    /// Action for retry.
    /// </summary>
    [Parameter, EditorRequired]
    public Func<Task> Retry { get; set; } = default!;
    
    /// <summary>
    /// Move to question event.
    /// </summary>
    [Parameter, EditorRequired]
    public EventCallback OnNextQuestion { get; set; }
    
    /// <summary>
    /// Answer selected event.
    /// </summary>
    [Parameter, EditorRequired]
    public EventCallback<AnswerFromModel> AnswerSelected { get; set; }
    
    private bool IsFacilitator => CurrentUserId == FacilitatorId;
}