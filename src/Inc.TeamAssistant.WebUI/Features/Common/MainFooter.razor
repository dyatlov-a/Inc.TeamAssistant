@inherits PersistentComponent<MainFooterViewModel>

@inject IRenderContext RenderContext

<div class="footer">
    <div class="footer__container">
        <div class="footer__content">
            @foreach (var group in ViewModel.Links)
            {
                <div class="footer-group">
                    <span class="footer-group__header">@group.Key</span>
                    @foreach (var link in group.Value)
                    {
                        <a
                            href="@link.Url"
                            class="link link_light footer-group__link"
                            target="@(link.External ? "_blank" : "_self")">
                            @link.Title
                        </a>
                    }
                </div>
            }
        </div>
    </div>
</div>

@code {
    protected override Task<MainFooterViewModel> Initialize(ResourcesManager resources)
    {
        const bool external = true;
        
        var links = new Dictionary<string, IReadOnlyCollection<MainFooterViewModel.FooterLink>>
        {
            [resources[Messages.Footer_GroupNavigation]] = new[]
            {
                new MainFooterViewModel.FooterLink(
                    resources[Messages.Footer_LinkMain],
                    LinkBuilder.Build(null),
                    !external),
                new MainFooterViewModel.FooterLink(
                    resources[Messages.Footer_LinkConstructor],
                    LinkBuilder.Build("constructor"),
                    !external),
                new MainFooterViewModel.FooterLink(
                    resources[Messages.Footer_LinkDashboard],
                    LinkBuilder.Build("dashboard"),
                    !external)
            },
            [resources[Messages.Footer_GroupTech]] = new[]
            {
                new MainFooterViewModel.FooterLink("DotNet", "https://dotnet.microsoft.com/", external),
                new MainFooterViewModel.FooterLink("Blazor", "https://dotnet.microsoft.com/apps/aspnet/web-apps/blazor", external),
                new MainFooterViewModel.FooterLink("Nuke", "https://nuke.build/", external)
            },
            [resources[Messages.Footer_GroupStorage]] = new[]
            {
                new MainFooterViewModel.FooterLink("Postgres", "https://www.postgresql.org/", external),
                new MainFooterViewModel.FooterLink("Npgsql", "https://www.npgsql.org/", external),
                new MainFooterViewModel.FooterLink("FluentMigrator", "https://fluentmigrator.github.io/", external)
            },
            [resources[Messages.Footer_GroupTools]] = new[]
            {
                new MainFooterViewModel.FooterLink("Telegram.Bot", "https://github.com/TelegramBots/Telegram.Bot", external),
                new MainFooterViewModel.FooterLink("FluentValidator", "https://docs.fluentvalidation.net/", external),
                new MainFooterViewModel.FooterLink("GitHub", "https://github.com/dyatlov-a/Inc.TeamAssistant", external)
            }
        };
        
        return Task.FromResult(new MainFooterViewModel(links));
    }
}