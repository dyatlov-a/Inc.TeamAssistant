@implements IDisposable

@inject NavRouter NavRouter

@foreach (var language in _languages)
{
    <RouterLink OnClick="() => MoveTo(language.Path)">
        <Content>@language.Culture</Content>
    </RouterLink>
}

@code {
    private IReadOnlyCollection<(string Culture, string Path)> _languages = Array.Empty<(string, string)>();
    private IDisposable? _routerScope;
    
    protected override void OnParametersSet()
    {
        SetLanguages();

        _routerScope = NavRouter.OnRouteChanged(SetLanguages);
    }
    
    private void SetLanguages()
    {
        var routeWithoutLanguage = NavRouter.GetRouteSegment();

        _languages = LanguageSettings.LanguageIds
            .Select(l => (l.Value, $"/{l.Value}/{routeWithoutLanguage}"))
            .ToArray();
        
        StateHasChanged();
    }

    private Task MoveTo(string path) => NavRouter.MoveToRoute(path, RoutingType.Server);
    
    public void Dispose() => _routerScope?.Dispose();
}