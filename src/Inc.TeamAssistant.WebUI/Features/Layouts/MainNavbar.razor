@implements IDisposable

@inject IRenderContext RenderContext
@inject NavRouter NavRouter
@inject IStringLocalizer<LayoutResources> Localizer

<div class="navbar">
    <div class="navbar-container">
        <AuthorizeView>
            <Authorized>
                @{ var person = context.User.ToPerson(); }
                <div class="navbar__item navbar__item_logo">
                    <RouterLink Href="@MainUrl">
                        <Content>
                            <HomeIcon Size="40px"/>
                        </Content>
                    </RouterLink>
                </div>
                @foreach (var language in _languages)
                {
                    <div class="navbar__item">
                        <RouterLink OnClick="() => MoveTo(language.Path)">
                            <Content>@language.Culture</Content>
                        </RouterLink>
                    </div>
                }
                <div class="navbar__divider"></div>
                <span class="navbar__item navbar__item_avatar">
                    <img src="/photos/@person.Id" alt="user avatar" class="user-avatar"/>
                    @person.Name
                    <br/>
                    @person.Username
                </span>
                <div class="navbar__item">
                    <RouterLink Href="@_logoutUrl">
                        <Content>@Localizer["Logout"].Value</Content>
                    </RouterLink>
                </div>
            </Authorized>
            <NotAuthorized>
                <div class="navbar__item">
                    <RouterLink Href="@MainUrl">
                        <Content>
                            <HomeIcon Size="40px"/>
                        </Content>
                    </RouterLink>
                </div>
                @foreach (var language in _languages)
                {
                    <div class="navbar__item">
                        <RouterLink OnClick="() => MoveTo(language.Path)">
                            <Content>@language.Culture</Content>
                        </RouterLink>
                    </div>
                }
                <div class="navbar__divider"></div>
                @if (!NavRouter.CurrentUrl.Contains("/login"))
                {
                    <div class="navbar__item">
                        <RouterLink Href="@NavRouter.CreateRoute($"login?returnUrl={NavRouter.CurrentUrl}")">
                            <Content>
                                @Localizer["Login"].Value
                            </Content>
                        </RouterLink>
                    </div>
                }
            </NotAuthorized>
        </AuthorizeView>
    </div>
</div>

@code {
    private IReadOnlyCollection<(string Culture, string Path)> _languages = Array.Empty<(string, string)>();
    private IDisposable? _routerScope;
    
    private string MainUrl => NavRouter.CreateRoute(null);
    private string _logoutUrl = string.Empty;

    protected override void OnInitialized()
    {
        var languageId = NavRouter.GetCurrentLanguage();
        
        _routerScope = NavRouter.OnRouteChanged(SetLanguages);
        _logoutUrl = languageId is null
            ? "accounts/logout"
            : $"accounts/logout?languageCode={languageId.Value}";
        
        SetLanguages();
    }
    
    private void SetLanguages()
    {
        var routeWithoutLanguage = NavRouter.GetRouteSegment();

        _languages = LanguageSettings.LanguageIds
            .Select(l => (l.Value, $"/{l.Value}/{routeWithoutLanguage}"))
            .ToArray();
        
        StateHasChanged();
    }

    private Task MoveTo(string path) => NavRouter.MoveToRoute(path, RoutingType.Server);

    public void Dispose() => _routerScope?.Dispose();
}