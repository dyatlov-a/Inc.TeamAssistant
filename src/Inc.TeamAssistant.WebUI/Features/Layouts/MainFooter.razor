@inject IRenderContext RenderContext
@inject ResourcesManager Resources
@inject NavRouter NavRouter

<div class="footer">
    <div class="footer__container">
        <div class="footer__content">
            @foreach (var group in _links)
            {
                <div class="footer-group">
                    <span class="footer-group__header">@group.Key</span>
                    @foreach (var link in group)
                    {
                        <RouterLink Href="@link.Url" Target="@(link.External ? RouterTarget.Blank : RouterTarget.Self)">
                            <Content>@link.Title</Content>
                        </RouterLink>
                    }
                </div>
            }
        </div>
    </div>
</div>

@code {
    private ILookup<string, FooterLink> _links = Enumerable.Empty<FooterLink>().ToLookup(_ => string.Empty);

    protected override void OnInitialized() => Load();

    private void Load()
    {
        const bool external = true;

        var links = new (MessageId Key, FooterLink Value)[]
        {
            (Messages.Footer_GroupNavigation, new FooterLink(
                Resources[Messages.Footer_LinkMain],
                NavRouter.CreateRoute(null),
                !external)),
            (Messages.Footer_GroupNavigation, new FooterLink(
                Resources[Messages.Footer_LinkConstructor],
                NavRouter.CreateRoute("constructor"),
                !external)),
            (Messages.Footer_GroupNavigation, new FooterLink(
                Resources[Messages.Footer_LinkDashboard],
                NavRouter.CreateRoute("dashboard"),
                !external)),
            (Messages.Footer_GroupTech, new FooterLink(
                "DotNet",
                "https://dotnet.microsoft.com/",
                external)),
            (Messages.Footer_GroupTech, new FooterLink(
                "Blazor",
                "https://dotnet.microsoft.com/apps/aspnet/web-apps/blazor",
                external)),
            (Messages.Footer_GroupTech, new FooterLink(
                "Nuke",
                "https://nuke.build/",
                external)),
            (Messages.Footer_GroupStorage, new FooterLink(
                "Postgres",
                "https://www.postgresql.org/",
                external)),
            (Messages.Footer_GroupStorage, new FooterLink(
                "Npgsql",
                "https://www.npgsql.org/",
                external)),
            (Messages.Footer_GroupStorage, new FooterLink(
                "FluentMigrator",
                "https://fluentmigrator.github.io/",
                external)),
            (Messages.Footer_GroupTools, new FooterLink(
                "Telegram.Bot",
                "https://github.com/TelegramBots/Telegram.Bot",
                external)),
            (Messages.Footer_GroupTools, new FooterLink(
                "FluentValidator",
                "https://docs.fluentvalidation.net/",
                external)),
            (Messages.Footer_GroupTools, new FooterLink(
                "GitHub",
                "https://github.com/dyatlov-a/Inc.TeamAssistant",
                external))
        };

        _links = links.ToLookup(i => Resources[i.Key], i => i.Value);
    }
}