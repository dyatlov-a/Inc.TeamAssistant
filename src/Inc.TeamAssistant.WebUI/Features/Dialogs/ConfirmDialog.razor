@inject ResourcesManager Resources

@if (_isOpen)
{
    <div class="confirm-dialog-bg"></div>
    <div class="confirm-dialog">
        <div class="confirm-dialog__body">
            <div class="confirm-dialog__content">
                @Content
            </div>
            <div class="confirm-dialog__actions">
                <button
                    type="button"
                    class="button button_light confirm-dialog__button"
                    @onclick="() => Close(OnConfirm)">
                    @Resources[Messages.ConfirmDialog_Yes]
                </button>
                <button
                    type="button"
                    class="button button_dark confirm-dialog__button"
                    @onclick="() => Close()">
                    @Resources[Messages.ConfirmDialog_No]
                </button>
            </div>
        </div>
    </div>
}

@code {
    [Parameter, EditorRequired]
    public RenderFragment Content { get; set; } = default!;
    
    [Parameter, EditorRequired]
    public EventCallback OnConfirm { get; set; }
    
    private bool _isOpen;

    public void Open()
    {
        _isOpen = true;
        
        StateHasChanged();
    }

    private async Task Close(EventCallback? confirm = null)
    {
        _isOpen = false;
        
        if (confirm.HasValue)
            await confirm.Value.InvokeAsync();
        else
            StateHasChanged();
    }
}